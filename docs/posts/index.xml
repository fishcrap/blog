<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Xujie&#39;s Blog</title>
    <link>https://fishcrap.github.io/blog/posts/</link>
    <description>Recent content in Posts on Xujie&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Apr 2022 19:14:39 +0800</lastBuildDate><atom:link href="https://fishcrap.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run Linux on RISC-V QEMU with Initramfs</title>
      <link>https://fishcrap.github.io/blog/posts/run-linux-on-riscv-qemu-advanced/</link>
      <pubDate>Thu, 14 Apr 2022 19:14:39 +0800</pubDate>
      
      <guid>https://fishcrap.github.io/blog/posts/run-linux-on-riscv-qemu-advanced/</guid>
      <description>Run Linux on RISC-V QEMU has described the entile process of booting RISC-V linux on QEMU. However, if you want to run an embedded linux on QEMU in only one binany image, you have to build the bootloader and the root file system into linux. This article will show how you can make it.
InitramfsThere are several methods to generate initramfs for linux. Two construction will be introduced: one is manual and the other is automatic.</description>
    </item>
    
    <item>
      <title>Run Linux on RISC-V QEMU</title>
      <link>https://fishcrap.github.io/blog/posts/run-linux-on-riscv-qemu/</link>
      <pubDate>Mon, 04 Apr 2022 18:49:34 +0800</pubDate>
      
      <guid>https://fishcrap.github.io/blog/posts/run-linux-on-riscv-qemu/</guid>
      <description>Build RISC-V toolchainSince &amp;ldquo;qemu&amp;rdquo; submodule is not related to the toolchain&amp;rsquo;s compilation, you can just delete it.
git clone https://github.com/riscv-collab/riscv-gnu-toolchain.git cd riscv-gnu-toolchain git rm qemu git submodule update --init --recursive ./configure --prefix=/opt/riscv make linux If the submodules of the repository is hard to download, you could clone the submodules separately:
git clone https://github.com/riscv-collab/riscv-binutils-gdb.git git clone https://github.com/riscv-collab/riscv-dejagnu.git git clone https://github.com/riscv-collab/riscv-gcc.git git clone git://sourceware.org/git/glibc.git git clone git://sourceware.org/git/newlib-cygwin.git And then move the submodules into the toolchain:</description>
    </item>
    
    <item>
      <title>Pip and Conda Change Repo</title>
      <link>https://fishcrap.github.io/blog/posts/pip-and-conda/</link>
      <pubDate>Fri, 17 Dec 2021 20:09:17 +0800</pubDate>
      
      <guid>https://fishcrap.github.io/blog/posts/pip-and-conda/</guid>
      <description>Pip Change RepositoryConfigUse pip config to configure PyPi repository on user or global level:
pip config [--user] set global.index https://my-company/nexus/repository/pypi-group/pypi pip config [--user] set global.index-url https://my-company/nexus/repository/pypi-group/simple pip config [--user] set global.trusted-host my-company where index-url is used by pip install, and index is used by pip search.
Use pip config -v list to find the path of the configuration file.
Famous Mirror Repositoryaliyun&amp;#39;s mirror: https://mirrors.</description>
    </item>
    
  </channel>
</rss>
